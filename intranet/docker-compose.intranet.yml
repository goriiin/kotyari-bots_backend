version: '3.8'

services:
  # 1. Redis Service
  redis:
    image: redis:7-alpine
    container_name: intranet-redis
    ports:
      # Expose Redis on the host machine for debugging (optional)
      - "6379:6379"
    volumes:
      # Persist Redis data across container restarts
      - redis-data:/data
    networks:
      - intranet-net
    healthcheck:
      # Ensure Redis is ready before other services that depend on it start
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Dzen URL Parser Service (gRPC Server)
  dzen-parser:
    container_name: intranet-dzen-parser
    build:
      # The build context is the project root, one level up from this file
      context: ..
      # The Dockerfile is located inside the dzen_url_parser directory
      dockerfile: intranet/dzen_url_parser/Dockerfile
    env_file:
      # Load environment variables from the .env file in this directory
      - ./.env
    ports:
      # Expose the gRPC port to the host machine
      - "8091:8091"
    networks:
      - intranet-net
    depends_on:
      redis:
        # Wait for the Redis healthcheck to pass before starting this service
        condition: service_healthy

  # 3. Scheduler Service (FastAPI and gRPC Client)
  scheduler:
    container_name: intranet-scheduler
    build:
      context: ..
      dockerfile: intranet/scheduler/Dockerfile
    env_file:
      - ./.env
    ports:
      - "8090:8090"
    networks:
      - intranet-net
    depends_on:
      - dzen-parser

  greenplum:
    image: woblerr/docker-greenplum:latest
    container_name: "greenplum_db"
    environment:
      GREENPLUM_DATABASE_NAME: ${GP_DB}
      GREENPLUM_USER: ${GP_USER}
      GREENPLUM_PASSWORD: ${GP_PASSWORD}
    volumes:
      - greenplum_data:/data
    restart: unless-stopped
    ports:
      - "54325:5432"
    networks:
      - intranet-net

  parser_app:
    build:
      context: .
      dockerfile: Dockerfile.parser
    container_name: parser_app
    depends_on:
      redis:
        condition: service_healthy
      greenplum:
        condition: service_started
    env_file:
      - .env
    shm_size: '2gb'
    restart: unless-stopped
    networks:
      - intranet-net


# Define a shared volume for Redis data persistence
volumes:
  redis-data:
  greenplum_data:

# Define the shared network for all services
networks:
  intranet-net:
    driver: bridge