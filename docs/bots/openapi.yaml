openapi: 3.0.0
info:
  title: "Bots Service"
  description: "API для управления ботами, их профилями и задачами в рамках аккаунта."
  version: "1.0.0"
servers:
  - url: http://localhost:8001
tags:
  - name: "Bots"
    description: "Операции над ботами, принадлежащими аккаунту."
  - name: "Bot-Profile Associations"
    description: "Управление связями между ботами и профилями."

# --------------------------------------------------------------
# Компоненты API
# --------------------------------------------------------------
components:
  # -------------------- Безопасность --------------------
#  securitySchemes:
#    cookieAuth:
#      type: apiKey
#      in: cookie
#      name: session_id
#    csrfAuth:
#      type: apiKey
#      in: header
#      name: X-CSRF-Token

  # -------------------- Схемы данных --------------------
  schemas:
    Bot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
        profilesCount:
          type: integer
          description: "Количество привязанных профилей."
          readOnly: true
        systemPrompt:
          type: string
        moderationRequired:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - name
        - profilesCount
        - createdAt
        - updatedAt

    BotInput:
      type: object
      description: "Данные для создания нового бота."
      properties:
        name:
          type: string
        systemPrompt:
          type: string
        moderationRequired:
          type: boolean
          default: false
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/Profile'

      required:
        - name

    BotUpdate:
      type: object
      description: "Данные для частичного обновления бота (для PATCH)."
      properties:
        name:
          type: string
        systemPrompt:
          type: string
        moderationRequired:
          type: boolean

    BotsSummary:
      type: object
      description: "Агрегированная информация о ботах."
      properties:
        totalBots:
          type: integer
          format: int64
          description: "Общее количество ботов в системе."
        totalProfilesAttached:
          type: integer
          format: int64
          description: "Общее количество привязанных профилей ко всем ботам."
      required:
        - totalBots
        - totalProfilesAttached

    Profile:
      type: object
      description: "Представление профиля, связанного с ботом."
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        systemPrompt:
          type: string
      required:
        - id
        - name

    BotList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Bot'
        nextCursor:
          type: string
          nullable: true

    ProfileList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Profile'

    Error:
      type: object
      description: "Стандартизированная структура ошибки."
      properties:
        errorCode:
          type: string
          description: "Машиночитаемый код ошибки."
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: "Человекочитаемое сообщение об ошибке."
          example: "Одно или несколько полей не прошли валидацию."
        details:
          type: object
          additionalProperties:
            type: string
          description: "Дополнительные детали об ошибке, например, по полям."
      required:
        - errorCode
        - message

  # -------------------- Параметры --------------------
  parameters:
    BotID:
      name: botId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ProfileID:
      name: profileId
      in: path
      required: true
      schema:
        type: string
        format: uuid

  # -------------------- Ответы --------------------
  responses:
    NoContent:
      description: "Операция успешна, тело ответа отсутствует."
    BadRequest:
      description: "Некорректный запрос (Bad Request)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: "Ошибка аутентификации (Unauthorized)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: "Ресурс не найден (Not Found)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: "Конфликт (Conflict)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: "Внутренняя ошибка сервера (Internal Server Error)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

#security:
#  - cookieAuth: []
#  - csrfAuth: []

paths:
  /api/v1/bots:
    get:
      summary: "Получить список своих ботов"
      operationId: "ListBots"
      tags: ["Bots"]
      responses:
        '200':
          description: "Успешный ответ со списком ботов."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: "Создать нового бота"
      operationId: "CreateBot"
      tags: ["Bots"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotInput'
      responses:
        '201':
          description: "Бот успешно создан."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/bots/{botId}:
    get:
      summary: "Получить бота по ID"
      operationId: "GetBotById"
      tags: ["Bots"]
      parameters:
        - $ref: '#/components/parameters/BotID'
      responses:
        '200':
          description: "Успешный ответ с данными бота."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: "Полностью обновить бота по ID"
      operationId: "UpdateBotById"
      tags: ["Bots"]
      parameters:
        - $ref: '#/components/parameters/BotID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotInput'
      responses:
        '200':
          description: "Бот успешно обновлен."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: "Удалить бота по ID"
      operationId: "DeleteBotById"
      tags: ["Bots"]
      parameters:
        - $ref: '#/components/parameters/BotID'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  #--- Управление связями ботов и профилей ---
  /api/v1/bots/{botId}/profiles:
    get:
      summary: "Получить список профилей, привязанных к боту"
      operationId: "GetBotProfiles"
      tags: ["Bot-Profile Associations"]
      parameters:
        - $ref: '#/components/parameters/BotID'
      responses:
        '200':
          description: "Успешный ответ со списком профилей."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/bots/summary:
    get:
      summary: "Получить сводную информацию по ботам"
      operationId: "SummaryBots"
      tags: [ "BotsSummary" ]
      responses:
        '200':
          description: "Успешный ответ со сводной информацией."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotsSummary'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/bots/search:
    get:
      summary: "Поиск ботов по названию или системному промпту"
      operationId: "SearchBots"
      tags: [ "Bots" ]
      parameters:
        - name: q
          in: query
          required: true
          description: "Строка для поиска."
          schema:
            type: string
      responses:
        '200':
          description: "Успешный ответ со списком найденных ботов."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/bots/{botId}/profiles/{profileId}:
    put:
      summary: "Привязать профиль к боту"
      operationId: "AddProfileToBot"
      tags: ["Bot-Profile Associations"]
      parameters:
        - $ref: '#/components/parameters/BotID'
        - $ref: '#/components/parameters/ProfileID'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: "Не найден бот или профиль."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: "Отвязать профиль от бота"
      operationId: "RemoveProfileFromBot"
      tags: ["Bot-Profile Associations"]
      parameters:
        - $ref: '#/components/parameters/BotID'
        - $ref: '#/components/parameters/ProfileID'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'