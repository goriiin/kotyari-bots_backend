// Code generated by ogen, DO NOT EDIT.

package profiles

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateMyProfile implements createMyProfile operation.
//
// Создает новый профиль и связывает его с текущим
// аккаунтом.
//
// POST /api/v1/profiles
func (UnimplementedHandler) CreateMyProfile(ctx context.Context, req *ProfileInput) (r CreateMyProfileRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteProfileById implements deleteProfileById operation.
//
// Удаляет профиль по его ID. Доступ разрешен только если
// профиль принадлежит текущему аккаунту.
//
// DELETE /api/v1/profiles/{profileId}
func (UnimplementedHandler) DeleteProfileById(ctx context.Context, params DeleteProfileByIdParams) (r DeleteProfileByIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProfileById implements getProfileById operation.
//
// Получает один профиль по его ID. Доступ разрешен
// только если профиль принадлежит текущему аккаунту.
//
// GET /api/v1/profiles/{profileId}
func (UnimplementedHandler) GetProfileById(ctx context.Context, params GetProfileByIdParams) (r GetProfileByIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListMyProfiles implements listMyProfiles operation.
//
// Возвращает пагинированный список профилей,
// принадлежащих текущему аутентифицированному
// аккаунту.
//
// GET /api/v1/profiles
func (UnimplementedHandler) ListMyProfiles(ctx context.Context) (r ListMyProfilesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateProfileById implements updateProfileById operation.
//
// Полностью обновляет профиль по его ID. Доступ разрешен
// только если профиль принадлежит текущему аккаунту.
//
// PUT /api/v1/profiles/{profileId}
func (UnimplementedHandler) UpdateProfileById(ctx context.Context, req *ProfileInput, params UpdateProfileByIdParams) (r UpdateProfileByIdRes, _ error) {
	return r, ht.ErrNotImplemented
}
