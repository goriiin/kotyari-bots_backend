// Code generated by ogen, DO NOT EDIT.

package bots

import (
	"time"

	"github.com/google/uuid"
)

type AddProfileToBotBadRequest Error

func (*AddProfileToBotBadRequest) addProfileToBotRes() {}

type AddProfileToBotInternalServerError Error

func (*AddProfileToBotInternalServerError) addProfileToBotRes() {}

type AddProfileToBotNotFound Error

func (*AddProfileToBotNotFound) addProfileToBotRes() {}

type AddProfileToBotUnauthorized Error

func (*AddProfileToBotUnauthorized) addProfileToBotRes() {}

// Ref: #/components/schemas/Bot
type Bot struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Profiles []Profile `json:"profiles"`
	// Количество привязанных профилей.
	ProfilesCount      int       `json:"profilesCount"`
	SystemPrompt       OptString `json:"systemPrompt"`
	ModerationRequired bool      `json:"moderationRequired"`
	AutoPublish        OptBool   `json:"autoPublish"`
	CreatedAt          time.Time `json:"createdAt"`
	UpdatedAt          time.Time `json:"updatedAt"`
}

// GetID returns the value of ID.
func (s *Bot) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Bot) GetName() string {
	return s.Name
}

// GetProfiles returns the value of Profiles.
func (s *Bot) GetProfiles() []Profile {
	return s.Profiles
}

// GetProfilesCount returns the value of ProfilesCount.
func (s *Bot) GetProfilesCount() int {
	return s.ProfilesCount
}

// GetSystemPrompt returns the value of SystemPrompt.
func (s *Bot) GetSystemPrompt() OptString {
	return s.SystemPrompt
}

// GetModerationRequired returns the value of ModerationRequired.
func (s *Bot) GetModerationRequired() bool {
	return s.ModerationRequired
}

// GetAutoPublish returns the value of AutoPublish.
func (s *Bot) GetAutoPublish() OptBool {
	return s.AutoPublish
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Bot) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Bot) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Bot) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Bot) SetName(val string) {
	s.Name = val
}

// SetProfiles sets the value of Profiles.
func (s *Bot) SetProfiles(val []Profile) {
	s.Profiles = val
}

// SetProfilesCount sets the value of ProfilesCount.
func (s *Bot) SetProfilesCount(val int) {
	s.ProfilesCount = val
}

// SetSystemPrompt sets the value of SystemPrompt.
func (s *Bot) SetSystemPrompt(val OptString) {
	s.SystemPrompt = val
}

// SetModerationRequired sets the value of ModerationRequired.
func (s *Bot) SetModerationRequired(val bool) {
	s.ModerationRequired = val
}

// SetAutoPublish sets the value of AutoPublish.
func (s *Bot) SetAutoPublish(val OptBool) {
	s.AutoPublish = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Bot) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Bot) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*Bot) createBotRes()     {}
func (*Bot) getBotByIdRes()    {}
func (*Bot) updateBotByIdRes() {}

// Данные для создания нового бота.
// Ref: #/components/schemas/BotInput
type BotInput struct {
	Name               string    `json:"name"`
	SystemPrompt       OptString `json:"systemPrompt"`
	ModerationRequired OptBool   `json:"moderationRequired"`
	AutoPublish        OptBool   `json:"autoPublish"`
}

// GetName returns the value of Name.
func (s *BotInput) GetName() string {
	return s.Name
}

// GetSystemPrompt returns the value of SystemPrompt.
func (s *BotInput) GetSystemPrompt() OptString {
	return s.SystemPrompt
}

// GetModerationRequired returns the value of ModerationRequired.
func (s *BotInput) GetModerationRequired() OptBool {
	return s.ModerationRequired
}

// GetAutoPublish returns the value of AutoPublish.
func (s *BotInput) GetAutoPublish() OptBool {
	return s.AutoPublish
}

// SetName sets the value of Name.
func (s *BotInput) SetName(val string) {
	s.Name = val
}

// SetSystemPrompt sets the value of SystemPrompt.
func (s *BotInput) SetSystemPrompt(val OptString) {
	s.SystemPrompt = val
}

// SetModerationRequired sets the value of ModerationRequired.
func (s *BotInput) SetModerationRequired(val OptBool) {
	s.ModerationRequired = val
}

// SetAutoPublish sets the value of AutoPublish.
func (s *BotInput) SetAutoPublish(val OptBool) {
	s.AutoPublish = val
}

// Ref: #/components/schemas/BotList
type BotList struct {
	Data       []Bot        `json:"data"`
	NextCursor OptNilString `json:"nextCursor"`
}

// GetData returns the value of Data.
func (s *BotList) GetData() []Bot {
	return s.Data
}

// GetNextCursor returns the value of NextCursor.
func (s *BotList) GetNextCursor() OptNilString {
	return s.NextCursor
}

// SetData sets the value of Data.
func (s *BotList) SetData(val []Bot) {
	s.Data = val
}

// SetNextCursor sets the value of NextCursor.
func (s *BotList) SetNextCursor(val OptNilString) {
	s.NextCursor = val
}

func (*BotList) listBotsRes()   {}
func (*BotList) searchBotsRes() {}

// Агрегированная информация о ботах.
// Ref: #/components/schemas/BotsSummary
type BotsSummary struct {
	// Общее количество ботов в системе.
	TotalBots int64 `json:"totalBots"`
	// Общее количество привязанных профилей ко всем ботам.
	TotalProfilesAttached int64 `json:"totalProfilesAttached"`
}

// GetTotalBots returns the value of TotalBots.
func (s *BotsSummary) GetTotalBots() int64 {
	return s.TotalBots
}

// GetTotalProfilesAttached returns the value of TotalProfilesAttached.
func (s *BotsSummary) GetTotalProfilesAttached() int64 {
	return s.TotalProfilesAttached
}

// SetTotalBots sets the value of TotalBots.
func (s *BotsSummary) SetTotalBots(val int64) {
	s.TotalBots = val
}

// SetTotalProfilesAttached sets the value of TotalProfilesAttached.
func (s *BotsSummary) SetTotalProfilesAttached(val int64) {
	s.TotalProfilesAttached = val
}

func (*BotsSummary) summaryBotsRes() {}

type CreateBotBadRequest Error

func (*CreateBotBadRequest) createBotRes() {}

type CreateBotConflict Error

func (*CreateBotConflict) createBotRes() {}

type CreateBotInternalServerError Error

func (*CreateBotInternalServerError) createBotRes() {}

type CreateBotUnauthorized Error

func (*CreateBotUnauthorized) createBotRes() {}

type DeleteBotByIdInternalServerError Error

func (*DeleteBotByIdInternalServerError) deleteBotByIdRes() {}

type DeleteBotByIdNotFound Error

func (*DeleteBotByIdNotFound) deleteBotByIdRes() {}

type DeleteBotByIdUnauthorized Error

func (*DeleteBotByIdUnauthorized) deleteBotByIdRes() {}

// Стандартизированная структура ошибки.
// Ref: #/components/schemas/Error
type Error struct {
	// Машиночитаемый код ошибки.
	ErrorCode string `json:"errorCode"`
	// Человекочитаемое сообщение об ошибке.
	Message string `json:"message"`
	// Дополнительные детали об ошибке, например, по полям.
	Details OptErrorDetails `json:"details"`
}

// GetErrorCode returns the value of ErrorCode.
func (s *Error) GetErrorCode() string {
	return s.ErrorCode
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() OptErrorDetails {
	return s.Details
}

// SetErrorCode sets the value of ErrorCode.
func (s *Error) SetErrorCode(val string) {
	s.ErrorCode = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val OptErrorDetails) {
	s.Details = val
}

func (*Error) summaryBotsRes() {}

// Дополнительные детали об ошибке, например, по полям.
type ErrorDetails map[string]string

func (s *ErrorDetails) init() ErrorDetails {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type GetBotByIdBadRequest Error

func (*GetBotByIdBadRequest) getBotByIdRes() {}

type GetBotByIdInternalServerError Error

func (*GetBotByIdInternalServerError) getBotByIdRes() {}

type GetBotByIdNotFound Error

func (*GetBotByIdNotFound) getBotByIdRes() {}

type GetBotByIdUnauthorized Error

func (*GetBotByIdUnauthorized) getBotByIdRes() {}

type GetBotProfilesInternalServerError Error

func (*GetBotProfilesInternalServerError) getBotProfilesRes() {}

type GetBotProfilesNotFound Error

func (*GetBotProfilesNotFound) getBotProfilesRes() {}

type GetBotProfilesUnauthorized Error

func (*GetBotProfilesUnauthorized) getBotProfilesRes() {}

type ListBotsInternalServerError Error

func (*ListBotsInternalServerError) listBotsRes() {}

type ListBotsUnauthorized Error

func (*ListBotsUnauthorized) listBotsRes() {}

// Ref: #/components/responses/NoContent
type NoContent struct{}

func (*NoContent) addProfileToBotRes()      {}
func (*NoContent) deleteBotByIdRes()        {}
func (*NoContent) removeProfileFromBotRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptErrorDetails returns new OptErrorDetails with value set to v.
func NewOptErrorDetails(v ErrorDetails) OptErrorDetails {
	return OptErrorDetails{
		Value: v,
		Set:   true,
	}
}

// OptErrorDetails is optional ErrorDetails.
type OptErrorDetails struct {
	Value ErrorDetails
	Set   bool
}

// IsSet returns true if OptErrorDetails was set.
func (o OptErrorDetails) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptErrorDetails) Reset() {
	var v ErrorDetails
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptErrorDetails) SetTo(v ErrorDetails) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptErrorDetails) Get() (v ErrorDetails, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptErrorDetails) Or(d ErrorDetails) ErrorDetails {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Представление профиля, связанного с ботом.
// Ref: #/components/schemas/Profile
type Profile struct {
	ID           uuid.UUID `json:"id"`
	Name         string    `json:"name"`
	SystemPrompt OptString `json:"systemPrompt"`
}

// GetID returns the value of ID.
func (s *Profile) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *Profile) GetName() string {
	return s.Name
}

// GetSystemPrompt returns the value of SystemPrompt.
func (s *Profile) GetSystemPrompt() OptString {
	return s.SystemPrompt
}

// SetID sets the value of ID.
func (s *Profile) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Profile) SetName(val string) {
	s.Name = val
}

// SetSystemPrompt sets the value of SystemPrompt.
func (s *Profile) SetSystemPrompt(val OptString) {
	s.SystemPrompt = val
}

// Ref: #/components/schemas/ProfileList
type ProfileList struct {
	Data []Profile `json:"data"`
}

// GetData returns the value of Data.
func (s *ProfileList) GetData() []Profile {
	return s.Data
}

// SetData sets the value of Data.
func (s *ProfileList) SetData(val []Profile) {
	s.Data = val
}

func (*ProfileList) getBotProfilesRes() {}

type RemoveProfileFromBotInternalServerError Error

func (*RemoveProfileFromBotInternalServerError) removeProfileFromBotRes() {}

type RemoveProfileFromBotNotFound Error

func (*RemoveProfileFromBotNotFound) removeProfileFromBotRes() {}

type RemoveProfileFromBotUnauthorized Error

func (*RemoveProfileFromBotUnauthorized) removeProfileFromBotRes() {}

type SearchBotsBadRequest Error

func (*SearchBotsBadRequest) searchBotsRes() {}

type SearchBotsInternalServerError Error

func (*SearchBotsInternalServerError) searchBotsRes() {}

type UpdateBotByIdBadRequest Error

func (*UpdateBotByIdBadRequest) updateBotByIdRes() {}

type UpdateBotByIdConflict Error

func (*UpdateBotByIdConflict) updateBotByIdRes() {}

type UpdateBotByIdInternalServerError Error

func (*UpdateBotByIdInternalServerError) updateBotByIdRes() {}

type UpdateBotByIdNotFound Error

func (*UpdateBotByIdNotFound) updateBotByIdRes() {}

type UpdateBotByIdUnauthorized Error

func (*UpdateBotByIdUnauthorized) updateBotByIdRes() {}
